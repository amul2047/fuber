<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<security:global-method-security
		pre-post-annotations="enabled" />

	<security:http use-expressions="true">
		<security:remember-me key="np.com.ea.fuber" />

		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/logout"
			access="permitAll" />
		<security:intercept-url pattern="/feeder"
			access="hasRole('ROLE_HUNGRY')" />
		<security:intercept-url pattern="/admin**"
			access="hasAnyRole('ROLE_ADMIN')" />

		<!-- <security:intercept-url pattern="/display" -->
		<!-- access="isAuthenticated()" /> -->
		<security:form-login login-processing-url="/j_spring_security_check"
			login-page="/auth/login" default-target-url="/auth/storeLogin"
			always-use-default-target="true" authentication-failure-url="/auth/denied" />
		<security:logout logout-success-url="/auth/login" />
		<security:session-management
			invalid-session-url="/" />

		<security:csrf disabled="true" />
	</security:http>
	<!-- 	
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="hungry" password="hungry"
					authorities="ROLE_HUNGRY" />
				<security:user name="feeder" password="feeder"
					authorities="ROLE_FEEDER" />
				<security:user name="admin" password="admin"
					authorities="ROLE_ADMIN" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
 -->
	<security:authentication-manager>
		<security:authentication-provider>
			<!--  <security:password-encoder hash="bcrypt" />-->
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username,password, enabled from users where username=?"
				authorities-by-username-query="select username, role from users where username =?" />
		</security:authentication-provider>
	</security:authentication-manager>
</beans>